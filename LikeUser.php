<?php

namespace App;

use Illuminate\Foundation\Auth\User as Authenticatable;

/**
 * App\User
 *
 * @mixin \Eloquent
 * @property int id
 * @property string username
 * @property string first_name
 * @property string last_name
 * @property mixed data
 * @property float score
 * @property string created_at
 * @property string updated_at
 * @property int|null ref
 * @property bool is_ref_paid
 * @property bool is_notify
 * @property string state
 */
class LikeUser extends Authenticatable
{
    protected $table = 'like_users';

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'id', 'username', 'first_name', 'last_name', 'ref', 'data', 'score', 'state'
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * Установить имя пользователя.
     *
     * @param  string  $value
     * @return string
     */
    public function setDataAttribute($value)
    {
//        echo 'setDataAttribute ' . var_export($value, true);
        $this->attributes['data'] = json_encode($value);
        $this->attributes['data'] = json_encode($value);
    }

    public function getDataAttribute($value)
    {
        return json_decode($value, true);
    }

    public function increment($column, $amount = 1, array $extra = [])
    {
        return parent::increment($column, $amount, $extra); // TODO: Change the autogenerated stub
    }

    public function getFullName()
    {
        $fullName = '';
        if ($this->username) {
            $fullName .= '@'.$this->username.' ';
        }
        if ($this->first_name || $this->last_name) {
            $fullName .= trim($this->first_name.' '.$this->last_name);
        }

        return trim($fullName);
    }
}
